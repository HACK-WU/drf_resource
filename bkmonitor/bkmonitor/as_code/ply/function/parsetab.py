# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA FLOAT FUNCTION LEFT_PARENTHESES NUMBER RIGHT_PARENTHESES STRING TIME\n    expression : FUNCTION LEFT_PARENTHESES params RIGHT_PARENTHESES\n               | FUNCTION\n               | FUNCTION LEFT_PARENTHESES RIGHT_PARENTHESES\n    \n    params : params COMMA param\n    \n    params : param\n    \n    param : STRING\n    \n    param : NUMBER\n    \n    param : FLOAT\n    \n    param : TIME\n    '

_lr_action_items = {
    'FUNCTION': (
        [
            0,
        ],
        [
            2,
        ],
    ),
    '$end': (
        [
            1,
            2,
            5,
            11,
        ],
        [
            0,
            -2,
            -3,
            -1,
        ],
    ),
    'LEFT_PARENTHESES': (
        [
            2,
        ],
        [
            3,
        ],
    ),
    'RIGHT_PARENTHESES': (
        [
            3,
            4,
            6,
            7,
            8,
            9,
            10,
            13,
        ],
        [
            5,
            11,
            -5,
            -6,
            -7,
            -8,
            -9,
            -4,
        ],
    ),
    'STRING': (
        [
            3,
            12,
        ],
        [
            7,
            7,
        ],
    ),
    'NUMBER': (
        [
            3,
            12,
        ],
        [
            8,
            8,
        ],
    ),
    'FLOAT': (
        [
            3,
            12,
        ],
        [
            9,
            9,
        ],
    ),
    'TIME': (
        [
            3,
            12,
        ],
        [
            10,
            10,
        ],
    ),
    'COMMA': (
        [
            4,
            6,
            7,
            8,
            9,
            10,
            13,
        ],
        [
            12,
            -5,
            -6,
            -7,
            -8,
            -9,
            -4,
        ],
    ),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    'expression': (
        [
            0,
        ],
        [
            1,
        ],
    ),
    'params': (
        [
            3,
        ],
        [
            4,
        ],
    ),
    'param': (
        [
            3,
            12,
        ],
        [
            6,
            13,
        ],
    ),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> expression", "S'", 1, None, None, None),
    (
        'expression -> FUNCTION LEFT_PARENTHESES params RIGHT_PARENTHESES',
        'expression',
        4,
        'p_expression',
        '__init__.py',
        38,
    ),
    ('expression -> FUNCTION', 'expression', 1, 'p_expression', '__init__.py', 39),
    ('expression -> FUNCTION LEFT_PARENTHESES RIGHT_PARENTHESES', 'expression', 3, 'p_expression', '__init__.py', 40),
    ('params -> params COMMA param', 'params', 3, 'p_params', '__init__.py', 47),
    ('params -> param', 'params', 1, 'p_params_param', '__init__.py', 54),
    ('param -> STRING', 'param', 1, 'p_string', '__init__.py', 61),
    ('param -> NUMBER', 'param', 1, 'p_number', '__init__.py', 68),
    ('param -> FLOAT', 'param', 1, 'p_float', '__init__.py', 75),
    ('param -> TIME', 'param', 1, 'p_time', '__init__.py', 82),
]
