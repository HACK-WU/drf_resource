# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND EQ EXCLUDE GT GTE INCLUDE LT LTE NAME NEQ NUMBER OR REGEQ REGNEQ STRING\n    expression : expression OR term\n    \n    expression : term\n    \n    term : term AND condition\n    \n    term : condition\n    \n    condition : NAME EQ STRING\n              | NAME NEQ STRING\n              | NAME REGEQ STRING\n              | NAME REGNEQ STRING\n              | NAME INCLUDE STRING\n              | NAME EXCLUDE STRING\n              | NAME GT STRING\n              | NAME GTE STRING\n              | NAME LT STRING\n              | NAME LTE STRING\n    \n    condition : NAME EQ NUMBER\n              | NAME NEQ NUMBER\n              | NAME GT NUMBER\n              | NAME GTE NUMBER\n              | NAME LT NUMBER\n              | NAME LTE NUMBER\n    '

_lr_action_items = {
    'NAME': (
        [
            0,
            5,
            6,
        ],
        [
            4,
            4,
            4,
        ],
    ),
    '$end': (
        [
            1,
            2,
            3,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
        ],
        [
            0,
            -2,
            -4,
            -1,
            -3,
            -5,
            -15,
            -6,
            -16,
            -7,
            -8,
            -9,
            -10,
            -11,
            -17,
            -12,
            -18,
            -13,
            -19,
            -14,
            -20,
        ],
    ),
    'OR': (
        [
            1,
            2,
            3,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
        ],
        [
            5,
            -2,
            -4,
            -1,
            -3,
            -5,
            -15,
            -6,
            -16,
            -7,
            -8,
            -9,
            -10,
            -11,
            -17,
            -12,
            -18,
            -13,
            -19,
            -14,
            -20,
        ],
    ),
    'AND': (
        [
            2,
            3,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
        ],
        [
            6,
            -4,
            6,
            -3,
            -5,
            -15,
            -6,
            -16,
            -7,
            -8,
            -9,
            -10,
            -11,
            -17,
            -12,
            -18,
            -13,
            -19,
            -14,
            -20,
        ],
    ),
    'EQ': (
        [
            4,
        ],
        [
            7,
        ],
    ),
    'NEQ': (
        [
            4,
        ],
        [
            8,
        ],
    ),
    'REGEQ': (
        [
            4,
        ],
        [
            9,
        ],
    ),
    'REGNEQ': (
        [
            4,
        ],
        [
            10,
        ],
    ),
    'INCLUDE': (
        [
            4,
        ],
        [
            11,
        ],
    ),
    'EXCLUDE': (
        [
            4,
        ],
        [
            12,
        ],
    ),
    'GT': (
        [
            4,
        ],
        [
            13,
        ],
    ),
    'GTE': (
        [
            4,
        ],
        [
            14,
        ],
    ),
    'LT': (
        [
            4,
        ],
        [
            15,
        ],
    ),
    'LTE': (
        [
            4,
        ],
        [
            16,
        ],
    ),
    'STRING': (
        [
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
        ],
        [
            19,
            21,
            23,
            24,
            25,
            26,
            27,
            29,
            31,
            33,
        ],
    ),
    'NUMBER': (
        [
            7,
            8,
            13,
            14,
            15,
            16,
        ],
        [
            20,
            22,
            28,
            30,
            32,
            34,
        ],
    ),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    'expression': (
        [
            0,
        ],
        [
            1,
        ],
    ),
    'term': (
        [
            0,
            5,
        ],
        [
            2,
            17,
        ],
    ),
    'condition': (
        [
            0,
            5,
            6,
        ],
        [
            3,
            3,
            18,
        ],
    ),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> expression", "S'", 1, None, None, None),
    ('expression -> expression OR term', 'expression', 3, 'p_expression', '__init__.py', 83),
    ('expression -> term', 'expression', 1, 'p_expression_term', '__init__.py', 91),
    ('term -> term AND condition', 'term', 3, 'p_term', '__init__.py', 98),
    ('term -> condition', 'term', 1, 'p_term_condition', '__init__.py', 106),
    ('condition -> NAME EQ STRING', 'condition', 3, 'p_condition', '__init__.py', 113),
    ('condition -> NAME NEQ STRING', 'condition', 3, 'p_condition', '__init__.py', 114),
    ('condition -> NAME REGEQ STRING', 'condition', 3, 'p_condition', '__init__.py', 115),
    ('condition -> NAME REGNEQ STRING', 'condition', 3, 'p_condition', '__init__.py', 116),
    ('condition -> NAME INCLUDE STRING', 'condition', 3, 'p_condition', '__init__.py', 117),
    ('condition -> NAME EXCLUDE STRING', 'condition', 3, 'p_condition', '__init__.py', 118),
    ('condition -> NAME GT STRING', 'condition', 3, 'p_condition', '__init__.py', 119),
    ('condition -> NAME GTE STRING', 'condition', 3, 'p_condition', '__init__.py', 120),
    ('condition -> NAME LT STRING', 'condition', 3, 'p_condition', '__init__.py', 121),
    ('condition -> NAME LTE STRING', 'condition', 3, 'p_condition', '__init__.py', 122),
    ('condition -> NAME EQ NUMBER', 'condition', 3, 'p_condition_number', '__init__.py', 130),
    ('condition -> NAME NEQ NUMBER', 'condition', 3, 'p_condition_number', '__init__.py', 131),
    ('condition -> NAME GT NUMBER', 'condition', 3, 'p_condition_number', '__init__.py', 132),
    ('condition -> NAME GTE NUMBER', 'condition', 3, 'p_condition_number', '__init__.py', 133),
    ('condition -> NAME LT NUMBER', 'condition', 3, 'p_condition_number', '__init__.py', 134),
    ('condition -> NAME LTE NUMBER', 'condition', 3, 'p_condition_number', '__init__.py', 135),
]
