# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2022-03-29 08:34
from __future__ import unicode_literals


import arrow
from django.db import migrations


def update_trigger_config(apps, *args, **kwargs):
    DetectModel = apps.get_model("bkmonitor", "DetectModel")
    StrategyActionConfigRelation = apps.get_model("bkmonitor", "StrategyActionConfigRelation")

    relation_mapping = {}
    for relation in StrategyActionConfigRelation.objects.filter(relate_type="NOTICE"):
        try:
            start_time = arrow.get(relation.options["start_time"], "HH:mm").format("HH:mm")
        except Exception:
            start_time = "00:00"

        try:
            end_time = arrow.get(relation.options["end_time"], "HH:mm").format("HH:mm")
        except Exception:
            end_time = "23:59"

        relation_mapping[relation.strategy_id] = {
            "time_ranges": [{"start": start_time, "end": end_time}],
            "calendars": [],
        }

    for detect in DetectModel.objects.all():
        if "uptime" in detect.trigger_config:
            continue
        detect.trigger_config["uptime"] = relation_mapping.get(
            detect.strategy_id,
            {
                "time_ranges": [{"start": "00:00", "end": "23:59"}],
                "calendars": [],
            },
        )
        detect.save()


class Migration(migrations.Migration):

    dependencies = [
        ("bkmonitor", "0082_merge_20220329_1634"),
    ]

    operations = [
        migrations.RunPython(update_trigger_config),
    ]
